Q: Write a function to display the list. Return the number of nodes.
D: 0
P: int displayAll(node* head)

Q: Write a function to display the list in reverse order. Return the number of nodes.
D: 0
P: int displayReverse(node* head)

Q: Write a function to display every node that is divisible by the argument passed in. Return number of nodes displayed.
D: 0
P: int displayDivisible(node* head, int toDisplay)

Q: Write a function to display every other Node in the list. Return the number of nodes that are not displayed.
D: 1
P: int displayEveryOther(node* head)

Q: Write a function to add the sum of the data from the first two nodes to the end of the list. Return the sum of the list. 
D: 1
P: int addToEnd(node*& head)

Q: Write a function to add the data passed in to the function after every instance of a 2 in the list. Return the number of nodes that were added to the list.
D: 1
P: int addAfter2(node*& head, int toAdd)

Q: Write a function to add the data passed in to the function before every instance of a 2 in the list. Return the number of nodes that were added to the list.
D: 1
P: int addBefore2(node*& head, int toAdd)

